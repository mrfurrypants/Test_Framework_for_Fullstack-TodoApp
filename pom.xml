<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>Test_Framework_for_Fullstack-TodoApp</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>19</maven.compiler.source>
        <maven.compiler.target>19</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.codeborne</groupId>
            <artifactId>selenide</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-remote-driver</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <!-- To use: import io.github.bonigarcia.wdm.WebDriverManager; -->
            <!-- Instead of "selenium-chrome-driver" dependency and System.setProperty("webdriver.chrome.driver", "C:\\chromedriver.exe"); -->
            <!-- To set the system property "webdriver.chrome.driver" to the path where the chromedriver executable is MANUALLY located. -->
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Maven automatically fetches JUnit library and include it in the classpath for your test classes. -->
            <groupId>org.junit.jupiter</groupId>
            <!-- Including the "junit-jupiter" dependency for access to the entire JUnit 5 framework, including components: -->
            <!-- JUnit Jupiter, JUnit Platform and JUnit Vintage needed for writing and executing JUnit tests. -->
            <artifactId>junit-jupiter</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
            <!-- Means that this dependency won't be included in the production code or the final executable JAR file -->
            <!-- by separating the test dependencies from compile dependencies (without <scope>test it is treated as compile). -->
        </dependency>
        <!-- Or separate artifactId "junit-jupiter" into 2 separate dependencies: -->
        <!-- "junit-jupiter-api" and "junit-jupiter-engine" to use different versions of them. -->

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId> <!-- Access to the parameterized testing features. -->
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.typesafe/config -->
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>RELEASE</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M7</version>
            </plugin>
        </plugins>
    </build>

</project>